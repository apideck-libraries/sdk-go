// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/apideck-libraries/sdk-go/internal/utils"
	"github.com/apideck-libraries/sdk-go/types"
)

type BalanceByPeriod struct {
	// Start date of the period.
	StartDate *types.Date `json:"start_date,omitempty"`
	// End date of the period.
	EndDate *types.Date `json:"end_date,omitempty"`
	// Total amount of the period.
	TotalAmount           *float64               `json:"total_amount,omitempty"`
	BalancesByTransaction []BalanceByTransaction `json:"balances_by_transaction,omitempty"`
}

func (b BalanceByPeriod) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(b, "", false)
}

func (b *BalanceByPeriod) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &b, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *BalanceByPeriod) GetStartDate() *types.Date {
	if o == nil {
		return nil
	}
	return o.StartDate
}

func (o *BalanceByPeriod) GetEndDate() *types.Date {
	if o == nil {
		return nil
	}
	return o.EndDate
}

func (o *BalanceByPeriod) GetTotalAmount() *float64 {
	if o == nil {
		return nil
	}
	return o.TotalAmount
}

func (o *BalanceByPeriod) GetBalancesByTransaction() []BalanceByTransaction {
	if o == nil {
		return nil
	}
	return o.BalancesByTransaction
}
