// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type Income struct {
	// Total income
	Total   *float64 `json:"total"`
	Records any      `json:"records"`
}

func (o *Income) GetTotal() *float64 {
	if o == nil {
		return nil
	}
	return o.Total
}

func (o *Income) GetRecords() any {
	if o == nil {
		return nil
	}
	return o.Records
}

type Expenses struct {
	// Total expense
	Total   *float64 `json:"total"`
	Records any      `json:"records"`
}

func (o *Expenses) GetTotal() *float64 {
	if o == nil {
		return nil
	}
	return o.Total
}

func (o *Expenses) GetRecords() any {
	if o == nil {
		return nil
	}
	return o.Records
}

type NetIncome struct {
	// Total net income
	Total   *float64 `json:"total"`
	Records any      `json:"records"`
}

func (o *NetIncome) GetTotal() *float64 {
	if o == nil {
		return nil
	}
	return o.Total
}

func (o *NetIncome) GetRecords() any {
	if o == nil {
		return nil
	}
	return o.Records
}

type NetOperatingIncome struct {
	// Total net operating income
	Total   *float64 `json:"total"`
	Records any      `json:"records"`
}

func (o *NetOperatingIncome) GetTotal() *float64 {
	if o == nil {
		return nil
	}
	return o.Total
}

func (o *NetOperatingIncome) GetRecords() any {
	if o == nil {
		return nil
	}
	return o.Records
}

type GrossProfit struct {
	// Total gross profit
	Total   *float64 `json:"total"`
	Records any      `json:"records"`
}

func (o *GrossProfit) GetTotal() *float64 {
	if o == nil {
		return nil
	}
	return o.Total
}

func (o *GrossProfit) GetRecords() any {
	if o == nil {
		return nil
	}
	return o.Records
}

type ProfitAndLoss struct {
	// A unique identifier for an object.
	ID *string `json:"id,omitempty"`
	// The name of the report
	ReportName string `json:"report_name"`
	// The start date of the report
	StartDate *string `json:"start_date,omitempty"`
	// The start date of the report
	EndDate  *string `json:"end_date,omitempty"`
	Currency string  `json:"currency"`
	// Customer id
	CustomerID         *string             `json:"customer_id,omitempty"`
	Income             Income              `json:"income"`
	Expenses           Expenses            `json:"expenses"`
	NetIncome          *NetIncome          `json:"net_income,omitempty"`
	NetOperatingIncome *NetOperatingIncome `json:"net_operating_income,omitempty"`
	GrossProfit        *GrossProfit        `json:"gross_profit,omitempty"`
	// When custom mappings are configured on the resource, the result is included here.
	CustomMappings *CustomMappings `json:"custom_mappings,omitempty"`
}

func (o *ProfitAndLoss) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ProfitAndLoss) GetReportName() string {
	if o == nil {
		return ""
	}
	return o.ReportName
}

func (o *ProfitAndLoss) GetStartDate() *string {
	if o == nil {
		return nil
	}
	return o.StartDate
}

func (o *ProfitAndLoss) GetEndDate() *string {
	if o == nil {
		return nil
	}
	return o.EndDate
}

func (o *ProfitAndLoss) GetCurrency() string {
	if o == nil {
		return ""
	}
	return o.Currency
}

func (o *ProfitAndLoss) GetCustomerID() *string {
	if o == nil {
		return nil
	}
	return o.CustomerID
}

func (o *ProfitAndLoss) GetIncome() Income {
	if o == nil {
		return Income{}
	}
	return o.Income
}

func (o *ProfitAndLoss) GetExpenses() Expenses {
	if o == nil {
		return Expenses{}
	}
	return o.Expenses
}

func (o *ProfitAndLoss) GetNetIncome() *NetIncome {
	if o == nil {
		return nil
	}
	return o.NetIncome
}

func (o *ProfitAndLoss) GetNetOperatingIncome() *NetOperatingIncome {
	if o == nil {
		return nil
	}
	return o.NetOperatingIncome
}

func (o *ProfitAndLoss) GetGrossProfit() *GrossProfit {
	if o == nil {
		return nil
	}
	return o.GrossProfit
}

func (o *ProfitAndLoss) GetCustomMappings() *CustomMappings {
	if o == nil {
		return nil
	}
	return o.CustomMappings
}
